{"/home/hudson/Documentos/Projects/DevChat/server/src/tests/login.spec.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/tests/login.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":57}},"6":{"start":{"line":9,"column":14},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":42}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"9":{"start":{"line":12,"column":19},"end":{"line":12,"column":33}},"10":{"start":{"line":13,"column":16},"end":{"line":13,"column":35}},"11":{"start":{"line":14,"column":15},"end":{"line":14,"column":42}},"12":{"start":{"line":15,"column":13},"end":{"line":20,"column":1}},"13":{"start":{"line":21,"column":0},"end":{"line":72,"column":3}},"14":{"start":{"line":22,"column":4},"end":{"line":24,"column":7}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":71}},"16":{"start":{"line":25,"column":4},"end":{"line":32,"column":7}},"17":{"start":{"line":26,"column":21},"end":{"line":29,"column":9}},"18":{"start":{"line":30,"column":23},"end":{"line":30,"column":82}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":43}},"20":{"start":{"line":33,"column":4},"end":{"line":39,"column":7}},"21":{"start":{"line":34,"column":23},"end":{"line":34,"column":91}},"22":{"start":{"line":35,"column":8},"end":{"line":35,"column":43}},"23":{"start":{"line":36,"column":8},"end":{"line":38,"column":11}},"24":{"start":{"line":40,"column":4},"end":{"line":46,"column":7}},"25":{"start":{"line":41,"column":23},"end":{"line":41,"column":91}},"26":{"start":{"line":42,"column":8},"end":{"line":42,"column":43}},"27":{"start":{"line":43,"column":8},"end":{"line":45,"column":11}},"28":{"start":{"line":47,"column":4},"end":{"line":57,"column":7}},"29":{"start":{"line":48,"column":32},"end":{"line":51,"column":9}},"30":{"start":{"line":52,"column":23},"end":{"line":52,"column":93}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":43}},"32":{"start":{"line":54,"column":8},"end":{"line":56,"column":11}},"33":{"start":{"line":58,"column":4},"end":{"line":68,"column":7}},"34":{"start":{"line":59,"column":32},"end":{"line":62,"column":9}},"35":{"start":{"line":63,"column":23},"end":{"line":63,"column":93}},"36":{"start":{"line":64,"column":8},"end":{"line":64,"column":43}},"37":{"start":{"line":65,"column":8},"end":{"line":67,"column":11}},"38":{"start":{"line":69,"column":4},"end":{"line":71,"column":7}},"39":{"start":{"line":70,"column":8},"end":{"line":70,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":29},"end":{"line":21,"column":30}},"loc":{"start":{"line":21,"column":41},"end":{"line":72,"column":1}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":11},"end":{"line":22,"column":12}},"loc":{"start":{"line":22,"column":23},"end":{"line":24,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":45},"end":{"line":25,"column":46}},"loc":{"start":{"line":25,"column":57},"end":{"line":32,"column":5}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":33},"end":{"line":33,"column":34}},"loc":{"start":{"line":33,"column":45},"end":{"line":39,"column":5}},"line":33},"5":{"name":"(anonymous_5)","decl":{"start":{"line":40,"column":33},"end":{"line":40,"column":34}},"loc":{"start":{"line":40,"column":45},"end":{"line":46,"column":5}},"line":40},"6":{"name":"(anonymous_6)","decl":{"start":{"line":47,"column":40},"end":{"line":47,"column":41}},"loc":{"start":{"line":47,"column":52},"end":{"line":57,"column":5}},"line":47},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":40},"end":{"line":58,"column":41}},"loc":{"start":{"line":58,"column":52},"end":{"line":68,"column":5}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":69,"column":10},"end":{"line":69,"column":11}},"loc":{"start":{"line":69,"column":16},"end":{"line":71,"column":5}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1},"f":{"0":4,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{"0":[1,1,1],"1":[1,3],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/tests/login.spec.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/tests/login.spec.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,gDAAwB;AACxB,0DAAiC;AACjC,iDAAyB;AACzB,2CAA8C;AAE9C,cAAI,CAAC,GAAG,CAAC,mBAAQ,CAAC,CAAC;AACnB,MAAM,EAAE,MAAM,EAAE,GAAG,cAAI,CAAC;AACxB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,aAAG,EAAE,CAAC;AAC1B,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AAClC,MAAM,IAAI,GAAG;IACX,EAAE,EAAE,2BAA2B;IAC/B,QAAQ,EAAE,OAAO;IACjB,QAAQ,EAAE,QAAQ;IAClB,OAAO,EAAE,8BAA8B;CACxC,CAAC;AAEF,QAAQ,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IACtC,MAAM,CAAC,KAAK,IAAI,EAAE;QAChB,eAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,OAAO;YACjB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,MAAM,MAAM,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,MAAM,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,OAAO,EAAE,2BAA2B;SACrC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,MAAM,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,OAAO,EAAE,2BAA2B;SACrC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,eAAe,GAAG;YACtB,QAAQ,EAAE,WAAW;YACrB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QACF,MAAM,MAAM,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5E,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,OAAO,EAAE,gCAAgC;SAC1C,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,eAAe,GAAG;YACtB,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,MAAM;SACjB,CAAC;QACF,MAAM,MAAM,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC5E,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;YACnC,OAAO,EAAE,gCAAgC;SAC1C,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,GAAG,EAAE;QACR,MAAM,CAAC,IAAI,CAAC,UAA8B,CAAC,OAAO,EAAE,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import sinon from \"sinon\";\nimport chai from \"chai\";\nimport chaiHttp from \"chai-http\";\nimport App from \"../app\";\nimport { PrismaClient } from \"@prisma/client\";\n\nchai.use(chaiHttp);\nconst { expect } = chai;\nconst { app } = new App();\nconst prisma = new PrismaClient();\nconst user = {\n  id: \"clbykvswx0000i0kadsdnp4tk\",\n  username: \"Felix\",\n  password: \"123456\",\n  img_url: \"https://github.com/Felix.png\",\n};\n\ndescribe(\"test login route\", async () => {\n  before(async () => {\n    sinon.stub(prisma.user, \"findUnique\").resolves(user);\n  });\n\n  it(\"must be able to login successfully\", async () => {\n    const user = {\n      username: \"Felix\",\n      password: \"123456\",\n    };\n    const result = await chai.request(app).post(\"/login\").send(user);\n    expect(result).to.have.status(200);\n  });\n  it(\"login without username\", async () => {\n    const result = await chai.request(app).post(\"/login\").send(user.password);\n    expect(result).to.have.status(400);\n    expect(result.body).to.be.deep.equal({\n      message: \"All fields must be filled\",\n    });\n  });\n  it(\"login without password\", async () => {\n    const result = await chai.request(app).post(\"/login\").send(user.username);\n    expect(result).to.have.status(400);\n    expect(result.body).to.be.deep.equal({\n      message: \"All fields must be filled\",\n    });\n  });\n  it(\"login with incorrect username\", async () => {\n    const usernameInvalid = {\n      username: \"ganimedes\",\n      password: \"123456\",\n    };\n    const result = await chai.request(app).post(\"/login\").send(usernameInvalid);\n    expect(result).to.have.status(401);\n    expect(result.body).to.be.deep.equal({\n      message: \"username or password incorrect\",\n    });\n  });\n  it(\"login with incorrect password\", async () => {\n    const passwordInvalid = {\n      username: \"ganimedes96\",\n      password: \"1234\",\n    };\n    const result = await chai.request(app).post(\"/login\").send(passwordInvalid);\n    expect(result).to.have.status(401);\n    expect(result.body).to.be.deep.equal({\n      message: \"username or password incorrect\",\n    });\n  });\n  after(() => {\n    (prisma.user.findUnique as sinon.SinonStub).restore();\n  });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"694022d014d81d4bbe37c3b0e69f9a9f81dd5673","contentHash":"cbb7f8c43ee5f93b0bd8e28cf8e3a6e192bdba633072798e1a1aea98203e66fd"},"/home/hudson/Documentos/Projects/DevChat/server/src/app.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":17},"end":{"line":8,"column":60}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":44}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":22}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":47}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":44}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":39}},"11":{"start":{"line":20,"column":8},"end":{"line":20,"column":76}},"12":{"start":{"line":20,"column":36},"end":{"line":20,"column":74}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":18},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":13},"end":{"line":18,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":16},"end":{"line":21,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":30},"end":{"line":20,"column":31}},"loc":{"start":{"line":20,"column":36},"end":{"line":20,"column":74}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":1},"f":{"0":3,"1":1,"2":1,"3":0,"4":0},"b":{"0":[1,1,1],"1":[1,2],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/app.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/app.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,gDAAwB;AACxB,6DAAqC;AAErC,MAAM,GAAG;IAEP;QACE,IAAI,CAAC,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;QACrB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IACM,MAAM;QACX,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAM,CAAC,CAAC;IACvB,CAAC;IACM,KAAK,CAAC,IAAqB;QAChC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC;CACF;AAED,kBAAe,GAAG,CAAC","sourcesContent":["import express from \"express\";\nimport cors from \"cors\";\nimport routes from \"./routes/routes\";\n\nclass App {\n  public app: express.Express;\n  constructor() {\n    this.app = express();\n    this.config();\n  }\n  public config(): void {\n    this.app.use(express.json());\n    this.app.use(cors());\n    this.app.use(routes);\n  }\n  public start(PORT: string | number): void {\n    this.app.listen(PORT, () => console.log(`Running on port ${PORT}`));\n  }\n}\n\nexport default App;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"842965cce636f9b67a83ae649401779d18c069d7","contentHash":"45079018c6045a664359ae70e2b6ebb8e3e1de612a530095556120a43ada4123"},"/home/hudson/Documentos/Projects/DevChat/server/src/routes/routes.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/routes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":26},"end":{"line":8,"column":71}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":65}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":69}},"8":{"start":{"line":11,"column":16},"end":{"line":11,"column":42}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":45}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":46}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":50}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":5},"b":{"0":[1,1,1],"1":[4,1],"2":[5,5]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/routes.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/routes/routes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,gEAAuC;AACvC,wEAA+C;AAC/C,kEAAyC;AACzC,sEAA6C;AAE7C,MAAM,OAAO,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,qBAAU,CAAC,CAAC;AAClC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,sBAAW,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,yBAAc,CAAC,CAAC;AACzC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,wBAAa,CAAC,CAAC;AAEvC,kBAAe,OAAO,CAAC","sourcesContent":["import express from \"express\";\nimport userRouter from \"./user.routes\";\nimport categoryRouter from \"./category.router\";\nimport loginRouter from \"./login.router\";\nimport messageRouter from \"./message.router\";\n\nconst routers = express.Router();\nrouters.use(\"/users\", userRouter);\nrouters.use(\"/login\", loginRouter);\nrouters.use(\"/category\", categoryRouter);\nrouters.use(\"/message\", messageRouter);\n\nexport default routers;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"902cc7db59a40df286ca083479c1ea637d5a4c70","contentHash":"d8037d7c8017ea75566b18b0719aadedb0dbe39d1804a4166638e106c5e3e4b1"},"/home/hudson/Documentos/Projects/DevChat/server/src/routes/user.routes.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/user.routes.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":26},"end":{"line":7,"column":84}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":75}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":62}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":64}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":20},"end":{"line":12,"column":48}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":65}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":39}},"12":{"start":{"line":15,"column":14},"end":{"line":15,"column":35}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":79}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":54}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":5,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":5},"b":{"0":[1,1,1],"1":[4,1],"2":[5,5]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/user.routes.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/routes/user.routes.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,qFAA4D;AAC5D,4EAAmD;AACnD,+DAA6C;AAC7C,iEAAyC;AAEzC,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,WAAW,GAAG,IAAI,sBAAW,EAAE,CAAC;AACtC,MAAM,cAAc,GAAG,IAAI,yBAAc,CAAC,WAAW,CAAC,CAAC;AACvD,MAAM,UAAU,GAAG,IAAI,cAAU,EAAE,CAAC;AACpC,MAAM,KAAK,GAAG,IAAI,eAAK,EAAE,CAAC;AAE1B,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,cAAc,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAC/E,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;AACzC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,cAAc,CAAC,eAAe,CAAC,CAAC;AACtD,kBAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\nimport UserController from \"../controllers/user.controller\";\nimport UserService from \"../services/user.service\";\nimport Middleware from \"../middlewares/user\";\nimport Token from \"../middlewares/token\";\n\nconst router = express.Router();\nconst userService = new UserService();\nconst userController = new UserController(userService);\nconst middleware = new Middleware();\nconst token = new Token();\n\nrouter.post(\"/register\", middleware.userValidation, userController.createUser);\nrouter.get(\"/\", userController.getUsers);\nrouter.get(\"/logged\", userController.getLoggedInUser);\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"238af85262841dc6be9a66cca3a5ebba6655a954","contentHash":"57721f2d400a1c7ed67db7a91b0098f6acbea89f88a0899f9d5fa75001de8965"},"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/user.controller.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/user.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":3,"column":59}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":41}},"3":{"start":{"line":7,"column":8},"end":{"line":17,"column":10}},"4":{"start":{"line":8,"column":12},"end":{"line":16,"column":13}},"5":{"start":{"line":9,"column":29},"end":{"line":9,"column":37}},"6":{"start":{"line":10,"column":32},"end":{"line":10,"column":72}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":46}},"8":{"start":{"line":14,"column":16},"end":{"line":14,"column":35}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":84}},"10":{"start":{"line":18,"column":8},"end":{"line":27,"column":10}},"11":{"start":{"line":19,"column":12},"end":{"line":26,"column":13}},"12":{"start":{"line":20,"column":30},"end":{"line":20,"column":64}},"13":{"start":{"line":21,"column":16},"end":{"line":21,"column":44}},"14":{"start":{"line":24,"column":16},"end":{"line":24,"column":35}},"15":{"start":{"line":25,"column":16},"end":{"line":25,"column":90}},"16":{"start":{"line":28,"column":8},"end":{"line":40,"column":10}},"17":{"start":{"line":29,"column":12},"end":{"line":39,"column":13}},"18":{"start":{"line":30,"column":30},"end":{"line":30,"column":55}},"19":{"start":{"line":31,"column":33},"end":{"line":31,"column":88}},"20":{"start":{"line":32,"column":32},"end":{"line":32,"column":81}},"21":{"start":{"line":33,"column":16},"end":{"line":33,"column":46}},"22":{"start":{"line":36,"column":16},"end":{"line":38,"column":80}},"23":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":30},"end":{"line":41,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":46},"end":{"line":17,"column":9}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":24},"end":{"line":18,"column":25}},"loc":{"start":{"line":18,"column":45},"end":{"line":27,"column":9}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":31},"end":{"line":28,"column":32}},"loc":{"start":{"line":28,"column":51},"end":{"line":40,"column":9}},"line":28}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/user.controller.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/controllers/user.controller.ts"],"names":[],"mappings":";;AAAA,4DAAyD;AAIzD,MAAqB,cAAc;IACjC,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAEtC,eAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;YACxD,IAAI;gBACF,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACzD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC/B;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC,CAAC;aACrE;QACH,CAAC,CAAC;QAEK,aAAQ,GAAG,KAAK,EAAE,IAAY,EAAE,GAAY,EAAE,EAAE;YACrD,IAAI;gBACA,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAA;gBAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;aAE9B;YAAC,OAAO,KAAK,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sCAAsC,EAAE,CAAC,CAAC;aAEjF;QACH,CAAC,CAAA;QAEM,oBAAe,GAAG,KAAK,EAAE,GAAW,EAAE,GAAY,EAAE,EAAE;YAC3D,IAAI;gBACA,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA;gBAEvC,MAAM,QAAQ,GAAG,MAAM,IAAA,6BAAa,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;gBACnD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAA;gBAEjE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aAChC;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,GAAG;qBACP,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC;aAC/D;QACH,CAAC,CAAA;IAtC+C,CAAC;CAuClD;AAxCD,iCAwCC","sourcesContent":["import { tokenUsername } from './../utils/tokenUsername';\nimport { Request, Response } from \"express\";\nimport UserService from \"../services/user.service\";\n\nexport default class UserController {\n  constructor(private _userService: UserService) {}\n\n  public createUser = async (req: Request, res: Response) => {\n    try {\n      const user = req.body;\n      const newUser = await this._userService.createUser(user);\n      res.status(201).json(newUser);\n    } catch (error) {\n      console.log(error);\n      res.status(500).json({ message: \"Error creating user, try again\" });\n    }\n  };\n\n  public getUsers = async (_req:Request, res:Response) => {\n    try {\n        const users = await this._userService.getUsers()\n        res.status(200).json(users)\n        \n    } catch (error) {\n            console.log(error);\n            res.status(500).json({ message: \"Error returning user list, try again\" });  \n                    \n    }\n  }\n\n  public getLoggedInUser = async (req:Request, res:Response) => {\n    try {\n        const token = req.headers.authorization\n        \n        const username = await tokenUsername(String(token)) \n        const getUser = await this._userService.getLoggedInUser(username)\n        \n        res.status(200).json(getUser)\n    } catch (error) {\n      return res\n        .status(500)\n        .json({ message: \"Error fetching user, please try again\" });\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b4fe7f7cff27faf1066836ad5fd70928e0eac780","contentHash":"a480a8c290baf5c519968c4d870905bfca6b9f880b8b62db20272f9e63bc3cee"},"/home/hudson/Documentos/Projects/DevChat/server/src/utils/tokenUsername.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/utils/tokenUsername.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"4":{"start":{"line":7,"column":14},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":22},"end":{"line":12,"column":1}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":59}},"7":{"start":{"line":10,"column":38},"end":{"line":10,"column":44}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":20}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":22},"end":{"line":8,"column":23}},"loc":{"start":{"line":8,"column":33},"end":{"line":12,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1},"f":{"0":1,"1":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/utils/tokenUsername.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/utils/tokenUsername.ts"],"names":[],"mappings":";;;;;;AACA,gDAAwB;AAEjB,MAAM,aAAa,GAAG,CAAC,KAAa,EAAE,EAAE;IAC7C,MAAM,MAAM,GAAG,aAAG,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAQ,CAAC;IACrD,MAAM,EACJ,MAAM,EAAE,EAAE,QAAQ,EAAE,GACrB,GAAG,MAAM,CAAC;IAEX,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC;AAPW,QAAA,aAAa,iBAOxB","sourcesContent":["\nimport jwt from \"./jwt\";\n\nexport const tokenUsername = (token: string) => {\n  const decode = jwt.decodeToken(String(token)) as any;\n  const {\n    decode: { username },\n  } = decode;\n\n  return username;\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"43226812aabbf4fc85b2e7e10d45db10358ed4db","contentHash":"df1625e4a1673898507698ca1a4b1f635a1be63ece45fd6d4f335017fff730aa"},"/home/hudson/Documentos/Projects/DevChat/server/src/utils/jwt.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/utils/jwt.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":20},"end":{"line":15,"column":1}},"7":{"start":{"line":10,"column":18},"end":{"line":13,"column":6}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"9":{"start":{"line":16,"column":22},"end":{"line":25,"column":1}},"10":{"start":{"line":17,"column":4},"end":{"line":24,"column":5}},"11":{"start":{"line":18,"column":21},"end":{"line":18,"column":65}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":44}},"13":{"start":{"line":22,"column":20},"end":{"line":22,"column":57}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":43}},"15":{"start":{"line":26,"column":20},"end":{"line":29,"column":1}},"16":{"start":{"line":27,"column":19},"end":{"line":27,"column":55}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"18":{"start":{"line":30,"column":0},"end":{"line":30,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":20},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":34},"end":{"line":15,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":22},"end":{"line":16,"column":23}},"loc":{"start":{"line":16,"column":33},"end":{"line":25,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":20},"end":{"line":26,"column":21}},"loc":{"start":{"line":26,"column":31},"end":{"line":29,"column":1}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1},"f":{"0":1,"1":1,"2":0,"3":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/utils/jwt.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/utils/jwt.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3B,gEAA+B;AAG/B,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,UAAoB,CAAC;AAEhD,MAAM,WAAW,GAAG,CAAC,QAAgB,EAAE,EAAE;IACvC,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE;QAC3C,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,OAAO;KACnB,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,MAAM,aAAa,GAAG,CAAC,KAAa,EAAE,EAAE;IACtC,IAAI;QACF,MAAM,IAAI,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;KACrC;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAClD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;KACpC;AACH,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,KAAa,EAAE,EAAE;IACpC,MAAM,MAAM,GAAG,sBAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACjC,OAAO,EAAC,MAAM,EAAC,CAAC;AAClB,CAAC,CAAC;AAEF,kBAAe,EAAE,WAAW,EAAE,aAAa,EAAE,WAAW,EAAE,CAAC","sourcesContent":["require(\"dotenv\").config();\nimport jwt from \"jsonwebtoken\";\n\n\nconst secret = process.env.JWT_SECRET as string;\n\nconst createToken = (username: string) => {\n  const token = jwt.sign({ username }, secret, {\n    expiresIn: \"1d\",\n    algorithm: \"HS256\",\n  });\n  return token;\n};\n\nconst validateToken = (token: string) => {\n  try {\n    const data = jwt.verify(token, secret);\n    return { type: null, result: data };\n  } catch (error) {\n    const err = new Error(\"Expired or invalid token\");\n    return { type: err, result: null };\n  }\n};\n\nconst decodeToken = (token: string) => {\n  const decode = jwt.decode(token);\n  return {decode};\n};\n\nexport default { createToken, validateToken, decodeToken };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9ac58672d4f22516fc50dba372ebeaca1fb2d2c4","contentHash":"1313ed79fe4839342ba0f5085bd7c7edb4fcc74c15330c0081eabd739e25b4d5"},"/home/hudson/Documentos/Projects/DevChat/server/src/services/user.service.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/services/user.service.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":42}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":50}},"3":{"start":{"line":7,"column":8},"end":{"line":17,"column":10}},"4":{"start":{"line":8,"column":43},"end":{"line":8,"column":47}},"5":{"start":{"line":9,"column":28},"end":{"line":15,"column":14}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":27}},"7":{"start":{"line":18,"column":8},"end":{"line":21,"column":10}},"8":{"start":{"line":19,"column":26},"end":{"line":19,"column":59}},"9":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"10":{"start":{"line":22,"column":8},"end":{"line":34,"column":10}},"11":{"start":{"line":23,"column":25},"end":{"line":32,"column":14}},"12":{"start":{"line":33,"column":12},"end":{"line":33,"column":24}},"13":{"start":{"line":35,"column":8},"end":{"line":45,"column":10}},"14":{"start":{"line":36,"column":27},"end":{"line":43,"column":14}},"15":{"start":{"line":44,"column":12},"end":{"line":44,"column":26}},"16":{"start":{"line":48,"column":0},"end":{"line":48,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":46,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":42},"end":{"line":17,"column":9}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":24},"end":{"line":18,"column":25}},"loc":{"start":{"line":18,"column":36},"end":{"line":21,"column":9}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":31},"end":{"line":22,"column":32}},"loc":{"start":{"line":22,"column":51},"end":{"line":34,"column":9}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":35,"column":25},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":45},"end":{"line":45,"column":9}},"line":35}},"branchMap":{},"s":{"0":1,"1":1,"2":4,"3":4,"4":0,"5":0,"6":0,"7":4,"8":0,"9":0,"10":4,"11":0,"12":0,"13":4,"14":0,"15":0,"16":1},"f":{"0":4,"1":0,"2":0,"3":0,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/services/user.service.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/services/user.service.ts"],"names":[],"mappings":";;AAAA,2CAA8C;AAG9C,MAAqB,WAAW;IAAhC;QACE,WAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;QACrB,eAAU,GAAG,KAAK,EAAE,IAAW,EAAE,EAAE;YACxC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;YACpC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC5C,IAAI,EAAE;oBACJ,QAAQ;oBACR,QAAQ;oBACR,OAAO,EAAE,sBAAsB,QAAQ,MAAM;iBAC9C;aACF,CAAC,CAAC;YACH,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEK,aAAQ,GAAG,KAAK,IAAI,EAAE;YAC3B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEK,oBAAe,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;YAClD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBACvC,KAAK,EAAE;oBACL,QAAQ;iBACT;gBACD,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,IAAI;iBACd;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEK,cAAS,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;YAC5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;gBAC/C,KAAK,EAAE;oBACL,QAAQ;iBACT;gBACD,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;iBACT;aACF,CAAC,CAAC;YACH,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC;IACJ,CAAC;CAAA;AA5CD,8BA4CC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { IUser } from \"../interfaces/IUser\";\n\nexport default class UserService {\n  prisma = new PrismaClient();\n  public createUser = async (user: IUser) => {\n    const { password, username } = user;\n    const newUser = await this.prisma.user.create({\n      data: {\n        username,\n        password,\n        img_url: `https://github.com/${username}.png`,\n      },\n    });\n    return newUser;\n  };\n\n  public getUsers = async () => {\n    const users = await this.prisma.user.findMany();\n    return users;\n  };\n\n  public getLoggedInUser = async (username: string) => {\n    const user = this.prisma.user.findUnique({\n      where: {\n        username,\n      },\n      select: {\n        id: true,\n        username: true,\n        img_url: true,\n      },\n    });\n    return user;\n  };\n\n  public getUserId = async (username: string) => {\n    const UserId = await this.prisma.user.findUnique({\n      where: {\n        username,\n      },\n      select: {\n        id: true,\n      },\n    });\n    return UserId;\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ee91914c7a1ced5df36ae91851384bd0e6b06d02","contentHash":"cf8ab68c015bcb18f64e32f285a6c81c131cd6e477dfe7dc3aa7c7b001ee53d1"},"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/user.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":42}},"2":{"start":{"line":6,"column":8},"end":{"line":21,"column":10}},"3":{"start":{"line":7,"column":43},"end":{"line":7,"column":51}},"4":{"start":{"line":8,"column":27},"end":{"line":8,"column":54}},"5":{"start":{"line":9,"column":26},"end":{"line":9,"column":54}},"6":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":77}},"8":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":77}},"10":{"start":{"line":16,"column":38},"end":{"line":16,"column":86}},"11":{"start":{"line":16,"column":59},"end":{"line":16,"column":85}},"12":{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},"13":{"start":{"line":18,"column":16},"end":{"line":18,"column":81}},"14":{"start":{"line":20,"column":12},"end":{"line":20,"column":19}},"15":{"start":{"line":24,"column":0},"end":{"line":24,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":22,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":30},"end":{"line":6,"column":31}},"loc":{"start":{"line":6,"column":56},"end":{"line":21,"column":9}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":49},"end":{"line":16,"column":50}},"loc":{"start":{"line":16,"column":59},"end":{"line":16,"column":85}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},{"start":{"line":10,"column":12},"end":{"line":12,"column":13}}],"line":10},"1":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13},"2":{"loc":{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},{"start":{"line":17,"column":12},"end":{"line":19,"column":13}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"f":{"0":1,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/user.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/user.ts"],"names":[],"mappings":";;AACA,2CAA8C;AAE9C,MAAqB,oBAAoB;IAAzC;QACS,mBAAc,GAAG,KAAK,EAC3B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;YACF,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YACxC,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;YAClC,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAE3C,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;aAC9D;YAED,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;aAC9D;YACD,MAAM,iBAAiB,GAAG,KAAK,CAAC,IAAI,CAClC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CACrC,CAAC;YAEF,IAAI,iBAAiB,EAAE;gBACrB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;aAClE;YACD,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;IACJ,CAAC;CAAA;AA1BD,uCA0BC","sourcesContent":["import { Response, Request, NextFunction } from \"express\";\nimport { PrismaClient } from \"@prisma/client\";\n\nexport default class CreateUserValidation {\n  public userValidation = async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    const { username, password } = req.body;\n    const prisma = new PrismaClient();\n    const users = await prisma.user.findMany();\n  \n    if (username.length < 3) {\n      return res.status(400).json({ message: \"Invalid username\" });\n    }\n\n    if (password.length < 5) {\n      return res.status(400).json({ message: \"Invalid password\" });\n    }\n    const userAlreadyExists = users.some(\n      (user) => user.username === username\n    );\n\n    if (userAlreadyExists) {\n      return res.status(400).json({ message: \"User already exists!\" });\n    }\n    next();\n  };\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f479d3fdfc190ebc33888c4778d7d9cf9340182","contentHash":"808f400f6be55d7500a1dd2790606cd3827e0301800c47df1719f9050516e02b"},"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/token.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/token.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":14},"end":{"line":6,"column":54}},"4":{"start":{"line":9,"column":8},"end":{"line":19,"column":10}},"5":{"start":{"line":10,"column":38},"end":{"line":10,"column":49}},"6":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"7":{"start":{"line":12,"column":16},"end":{"line":12,"column":76}},"8":{"start":{"line":14,"column":29},"end":{"line":14,"column":71}},"9":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"10":{"start":{"line":16,"column":16},"end":{"line":16,"column":63}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":19}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":20,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":31},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":57},"end":{"line":19,"column":9}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},{"start":{"line":11,"column":12},"end":{"line":13,"column":13}}],"line":11},"4":{"loc":{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},"type":"if","locations":[{"start":{"line":15,"column":12},"end":{"line":17,"column":13}},{"start":{"line":15,"column":12},"end":{"line":17,"column":13}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":1,"1":2,"2":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/token.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/token.ts"],"names":[],"mappings":";;;;;AACA,uDAA+B;AAG/B,MAAqB,eAAe;IAApC;QACS,oBAAe,GAAG,KAAK,EAC5B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;YACF,MAAM,EAAE,aAAa,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC;YACtC,IAAI,CAAC,aAAa,EAAE;gBAClB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,CAAC;aAC7D;YAED,MAAM,EAAE,IAAI,EAAE,GAAG,aAAG,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YAElD,IAAI,IAAI,EAAE;gBACR,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;aAChD;YAED,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;IACJ,CAAC;CAAA;AAnBD,kCAmBC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\nimport jwt from \"../utils/jwt\";\n\n\nexport default class MiddlewareToken {\n  public validationToken = async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    const { authorization } = req.headers;\n    if (!authorization) {\n      return res.status(401).json({ message: \"Token not found\" });\n    }\n\n    const { type } = jwt.validateToken(authorization);\n\n    if (type) {\n      return res.status(401).json({ message: type });\n    }\n\n    next();\n  };\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"12b5ba28120e71ecf1c8e66df7fc7922a8ba6687","contentHash":"99bfa1eeb033ed660eeb7df7c4c3782d718f4f2a590d47c387bbb8ca20144a6d"},"/home/hudson/Documentos/Projects/DevChat/server/src/routes/category.router.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/category.router.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":30},"end":{"line":7,"column":92}},"5":{"start":{"line":8,"column":27},"end":{"line":8,"column":83}},"6":{"start":{"line":9,"column":15},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":24},"end":{"line":10,"column":56}},"8":{"start":{"line":11,"column":27},"end":{"line":11,"column":77}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":60}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":60}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":3,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":3},"b":{"0":[1,1,1],"1":[2,1],"2":[3,3]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/category.router.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/routes/category.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,6FAAoE;AACpE,oFAA2D;AAE3D,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,eAAe,GAAG,IAAI,0BAAe,EAAE,CAAC;AAC9C,MAAM,kBAAkB,GAAG,IAAI,6BAAkB,CAAC,eAAe,CAAC,CAAC;AAEnE,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,kBAAkB,CAAC,cAAc,CAAC,CAAC;AAC5D,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,kBAAkB,CAAC,YAAY,CAAC,CAAC;AACjD,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,kBAAkB,CAAC,cAAc,CAAC,CAAA;AAE3D,kBAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\nimport CategoryController from \"../controllers/category.controller\";\nimport CategoryService from \"../services/category.service\";\n\nconst router = express.Router();\nconst categoryService = new CategoryService();\nconst categoryController = new CategoryController(categoryService);\n\nrouter.post(\"/register\", categoryController.createCategory);\nrouter.get(\"/\", categoryController.listCategory);\nrouter.get('/:category', categoryController.deleteCategory)\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"680c74744ca4fae62a2132364c17fb2a1ee68bb6","contentHash":"56b5aacf778832e869e181f0bbc5c31ee1de4d330d584604de3519ffbfae7511"},"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/category.controller.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/category.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":3,"column":57}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":49}},"3":{"start":{"line":7,"column":8},"end":{"line":19,"column":10}},"4":{"start":{"line":8,"column":12},"end":{"line":18,"column":13}},"5":{"start":{"line":9,"column":33},"end":{"line":9,"column":41}},"6":{"start":{"line":10,"column":30},"end":{"line":10,"column":55}},"7":{"start":{"line":11,"column":33},"end":{"line":11,"column":88}},"8":{"start":{"line":12,"column":36},"end":{"line":12,"column":98}},"9":{"start":{"line":13,"column":16},"end":{"line":13,"column":50}},"10":{"start":{"line":16,"column":16},"end":{"line":16,"column":35}},"11":{"start":{"line":17,"column":16},"end":{"line":17,"column":88}},"12":{"start":{"line":20,"column":8},"end":{"line":25,"column":10}},"13":{"start":{"line":21,"column":33},"end":{"line":21,"column":43}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":73}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":39}},"16":{"start":{"line":26,"column":8},"end":{"line":35,"column":10}},"17":{"start":{"line":27,"column":12},"end":{"line":34,"column":13}},"18":{"start":{"line":28,"column":39},"end":{"line":28,"column":80}},"19":{"start":{"line":29,"column":16},"end":{"line":29,"column":53}},"20":{"start":{"line":32,"column":16},"end":{"line":32,"column":35}},"21":{"start":{"line":33,"column":16},"end":{"line":33,"column":94}},"22":{"start":{"line":38,"column":0},"end":{"line":38,"column":37}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":34},"end":{"line":36,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":30},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":50},"end":{"line":19,"column":9}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":30},"end":{"line":20,"column":31}},"loc":{"start":{"line":20,"column":50},"end":{"line":25,"column":9}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":28},"end":{"line":26,"column":29}},"loc":{"start":{"line":26,"column":48},"end":{"line":35,"column":9}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"f":{"0":1,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/category.controller.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/controllers/category.controller.ts"],"names":[],"mappings":";;AAEA,0DAAuD;AAEvD,MAAqB,kBAAkB;IACnC,YAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAC9C,mBAAc,GAAG,KAAK,EAAE,GAAW,EAAE,GAAY,EAAE,EAAE;YACxD,IAAI;gBACD,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAA;gBACzB,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAA;gBACvC,MAAM,QAAQ,GAAG,MAAM,IAAA,6BAAa,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;gBACnD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;gBAClF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;aACnC;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oCAAoC,EAAE,CAAC,CAAC;aAE3E;QACL,CAAC,CAAA;QAEM,mBAAc,GAAG,KAAK,EAAE,GAAY,EAAE,GAAY,EAAE,EAAE;YACzD,MAAM,EAAC,QAAQ,EAAC,GAAG,GAAG,CAAC,MAAM,CAAA;YAC7B,0BAA0B;YAE1B,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;YAC5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC9B,CAAC,CAAA;QAEM,iBAAY,GAAG,KAAK,EAAE,GAAW,EAAE,GAAY,EAAE,EAAE;YACtD,IAAI;gBACA,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAA;gBAChE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;aACvC;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,0CAA0C,EAAE,CAAC,CAAC;aACjF;QACL,CAAC,CAAA;IA/BwD,CAAC;CAgC7D;AAjCD,qCAiCC","sourcesContent":["import { Request, Response } from \"express\";\nimport CategoryService from \"../services/category.service\";\nimport { tokenUsername } from \"../utils/tokenUsername\";\n\nexport default class CategoryController {\n    constructor(private _categoryService: CategoryService ) {}\n    public createCategory = async (req:Request, res:Response) => {\n        try {\n           const category = req.body\n           const token = req.headers.authorization\n           const username = await tokenUsername(String(token))\n           const newCategory = await this._categoryService.createCategory(category, username)\n           res.status(201).json(newCategory)     \n        } catch (error) {\n            console.log(error);\n            res.status(500).json({ message: \"Error creating category, try again\" });\n            \n        }\n    } \n\n    public deleteCategory = async (req: Request, res:Response) => {\n        const {category} = req.params\n        // console.log(\"user\",id);\n        \n        await this._categoryService.deleteCategory(String(category))\n        res.status(200).json('ok')\n    }\n    \n    public listCategory = async (req:Request, res:Response) => {\n        try {\n            const listCategories = await this._categoryService.getCategory()\n            res.status(200).json(listCategories)\n        } catch (error) {\n            console.log(error);\n            res.status(500).json({ message: \"Error returning list category, try again\" });\n        }\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c8bc588c6f32c5238b5220afcbf3e0a2cd518a50","contentHash":"393834534a9d7fb46ee1dde728d7b984150cac5f5a417a49990532688d94b967"},"/home/hudson/Documentos/Projects/DevChat/server/src/services/category.service.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/services/category.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":65}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":50}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":56}},"7":{"start":{"line":12,"column":8},"end":{"line":22,"column":10}},"8":{"start":{"line":13,"column":25},"end":{"line":13,"column":73}},"9":{"start":{"line":14,"column":33},"end":{"line":14,"column":43}},"10":{"start":{"line":15,"column":32},"end":{"line":20,"column":14}},"11":{"start":{"line":21,"column":12},"end":{"line":21,"column":31}},"12":{"start":{"line":23,"column":8},"end":{"line":28,"column":10}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":45}},"14":{"start":{"line":25,"column":12},"end":{"line":27,"column":15}},"15":{"start":{"line":29,"column":8},"end":{"line":32,"column":10}},"16":{"start":{"line":30,"column":31},"end":{"line":30,"column":70}},"17":{"start":{"line":31,"column":12},"end":{"line":31,"column":30}},"18":{"start":{"line":33,"column":8},"end":{"line":43,"column":10}},"19":{"start":{"line":34,"column":31},"end":{"line":41,"column":14}},"20":{"start":{"line":42,"column":12},"end":{"line":42,"column":30}},"21":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":44,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":30},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":62},"end":{"line":22,"column":9}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":30},"end":{"line":23,"column":31}},"loc":{"start":{"line":23,"column":50},"end":{"line":28,"column":9}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":27},"end":{"line":29,"column":28}},"loc":{"start":{"line":29,"column":39},"end":{"line":32,"column":9}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":29},"end":{"line":33,"column":30}},"loc":{"start":{"line":33,"column":49},"end":{"line":43,"column":9}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":0,"9":0,"10":0,"11":0,"12":2,"13":0,"14":0,"15":2,"16":0,"17":0,"18":2,"19":0,"20":0,"21":1},"f":{"0":1,"1":2,"2":0,"3":0,"4":0,"5":0},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/services/category.service.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/services/category.service.ts"],"names":[],"mappings":";;;;;AAAA,2CAA8C;AAE9C,kEAAyC;AAEzC,MAAqB,eAAe;IAApC;QACE,WAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;QAC5B,gBAAW,GAAG,IAAI,sBAAW,EAAE,CAAC;QAEzB,mBAAc,GAAG,KAAK,EAAE,UAAqB,EAAE,QAAgB,EAAE,EAAE;YACxE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC9D,MAAM,EAAE,QAAQ,EAAE,GAAG,UAAU,CAAC;YAEhC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;gBACtD,IAAI,EAAE;oBACJ,QAAQ,EAAE,QAAQ,CAAC,WAAW,EAAE;oBAChC,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC;iBACzB;aACF,CAAC,CAAC;YACH,OAAO,WAAW,CAAC;QACrB,CAAC,CAAC;QAEK,mBAAc,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;YACjD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAEjC,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC;gBACtC,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE;aACtC,CAAC,CAAC;QACL,CAAC,CAAC;QAEK,gBAAW,GAAG,KAAK,IAAI,EAAE;YAC9B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3D,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEK,kBAAa,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;YAChD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACvD,KAAK,EAAE;oBACL,QAAQ;iBACT;gBACD,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;iBACT;aACF,CAAC,CAAC;YACH,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;CAAA;AAzCD,kCAyCC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { ICategory } from \"../interfaces/ICategory\";\nimport UserService from \"./user.service\";\n\nexport default class CategoryService {\n  prisma = new PrismaClient();\n  userService = new UserService();\n\n  public createCategory = async (categories: ICategory, username: string) => {\n    const user = await this.userService.getLoggedInUser(username);\n    const { category } = categories;\n\n    const newCategory = await this.prisma.categories.create({\n      data: {\n        category: category.toLowerCase(),\n        userId: String(user?.id),\n      },\n    });\n    return newCategory;\n  };\n\n  public deleteCategory = async (category: string) => {\n    console.log(\"service\", category);\n    \n    await this.prisma.categories.deleteMany({\n      where: { category: String(category) },\n    });\n  };\n\n  public getCategory = async () => {\n    const categories = await this.prisma.categories.findMany();\n    return categories;\n  };\n\n  public getCategoryId = async (category: string) => {\n    const categoryId = await this.prisma.categories.findMany({\n      where: {\n        category,\n      },\n      select: {\n        id: true,\n      },\n    });\n    return categoryId;\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"746950226a21d26dd4df03c6c971b7e47b02f4d1","contentHash":"a9185030d98cc9ddc8f431654e7a4631220acc982281373796bda13219a8ca30"},"/home/hudson/Documentos/Projects/DevChat/server/src/routes/login.router.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/login.router.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":27},"end":{"line":7,"column":86}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":77}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":64}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":40}},"9":{"start":{"line":12,"column":21},"end":{"line":12,"column":50}},"10":{"start":{"line":13,"column":24},"end":{"line":13,"column":68}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":68}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{"0":4},"b":{"0":[1,1,1],"1":[3,1],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/login.router.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/routes/login.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,uFAA8D;AAC9D,8EAAoD;AACpD,iEAA6C;AAG7C,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,UAAU,GAAG,IAAI,eAAU,EAAE,CAAC;AACpC,MAAM,YAAY,GAAG,IAAI,uBAAY,EAAE,CAAC;AACxC,MAAM,eAAe,GAAG,IAAI,0BAAe,CAAC,YAAY,CAAC,CAAC;AAE1D,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,UAAU,CAAC,eAAe,EAAE,eAAe,CAAC,KAAK,CAAC,CAAA;AAElE,kBAAe,MAAM,CAAA","sourcesContent":["import express from \"express\";\nimport LoginController from \"../controllers/login.controller\";\nimport LoginService from '../services/login.service'\nimport Middleware from '../middlewares/login'\n\n\nconst router = express.Router();\nconst middleware = new Middleware();\nconst loginService = new LoginService();\nconst loginController = new LoginController(loginService);\n\nrouter.post('/',middleware.validationLogin, loginController.login)\n\nexport default router"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bbc18a02051db15756c7cbdb2a9905f87dd46caf","contentHash":"e245e3f6d7a10542e55fba39068fc111f00d541aa00b18d303518bf4edaf76f0"},"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/login.controller.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/login.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":43}},"2":{"start":{"line":6,"column":8},"end":{"line":16,"column":10}},"3":{"start":{"line":7,"column":12},"end":{"line":15,"column":13}},"4":{"start":{"line":8,"column":37},"end":{"line":8,"column":45}},"5":{"start":{"line":9,"column":30},"end":{"line":9,"column":70}},"6":{"start":{"line":10,"column":16},"end":{"line":10,"column":55}},"7":{"start":{"line":13,"column":16},"end":{"line":13,"column":35}},"8":{"start":{"line":14,"column":16},"end":{"line":14,"column":88}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":31},"end":{"line":17,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"loc":{"start":{"line":6,"column":41},"end":{"line":16,"column":9}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/login.controller.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/controllers/login.controller.ts"],"names":[],"mappings":";;AAIA,MAAqB,eAAe;IAClC,YAAoB,aAA2B;QAA3B,kBAAa,GAAb,aAAa,CAAc;QACxC,UAAK,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;YACnD,IAAI;gBACF,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;gBAG9B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACvD,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAC,KAAK,EAAC,CAAC,CAAC;aACtC;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oCAAoC,EAAE,CAAC,CAAC;aACzE;QACH,CAAC,CAAC;IAZgD,CAAC;CAapD;AAdD,kCAcC","sourcesContent":["\nimport { Request, Response } from \"express\";\nimport LoginService from \"../services/login.service\";\n\nexport default class LoginController {\n  constructor(private _loginService: LoginService) {}\n  public login = async (req: Request, res: Response) => {\n    try {\n      const { username } = req.body;\n      \n      \n      const token = await this._loginService.login(username);\n      return res.status(200).json({token});\n    } catch (error) {\n      console.log(error);\n      res.status(500).json({ message: \"Error logging in, please try again\" });\n    }\n  };\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"21afc2686728e23660399d3957ff1849c1d25335","contentHash":"1a4f9bc34203a7915a1e183a1e63e9ab46f1b2afb8f824e9ccd8b5374bde7a4a"},"/home/hudson/Documentos/Projects/DevChat/server/src/services/login.service.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/services/login.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":14},"end":{"line":7,"column":54}},"5":{"start":{"line":10,"column":8},"end":{"line":20,"column":10}},"6":{"start":{"line":11,"column":27},"end":{"line":11,"column":54}},"7":{"start":{"line":12,"column":29},"end":{"line":12,"column":57}},"8":{"start":{"line":13,"column":36},"end":{"line":15,"column":14}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":76}},"10":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"11":{"start":{"line":17,"column":16},"end":{"line":17,"column":39}},"12":{"start":{"line":19,"column":12},"end":{"line":19,"column":55}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":21,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":21},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":41},"end":{"line":20,"column":9}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":49},"end":{"line":13,"column":50}},"loc":{"start":{"line":13,"column":59},"end":{"line":15,"column":13}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":0,"12":1,"13":1},"f":{"0":1,"1":1,"2":1,"3":2},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/services/login.service.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/services/login.service.ts"],"names":[],"mappings":";;;;;AAAA,2CAA8C;AAE9C,uDAA+B;AAE/B,MAAqB,YAAY;IAAjC;QACS,UAAK,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;YACxC,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;YAClC,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9C,MAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC5C,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC9D,CAAC,CAAC,CAAC;YACH,IAAI,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChC,OAAO,eAAe,CAAC;aACxB;YACD,OAAO,aAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;CAAA;AAZD,+BAYC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nimport jwt from \"../utils/jwt\";\n\nexport default class LoginService {\n  public login = async (username: string) => {\n    const prisma = new PrismaClient();\n    const getUsers = await prisma.user.findMany();\n    const userAndPassword = getUsers.map((user) => {\n      return { username: user.username, password: user.password };\n    });\n    if (userAndPassword.length === 0) {\n      return userAndPassword;\n    }\n    return jwt.createToken(username);\n  };\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8686f91a44f99589c2dbf5abf5a352823676afd9","contentHash":"8d6cf73985081c99024725479d5379364c7d01408e482fd79cba4e894b187743"},"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/login.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/login.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":42}},"2":{"start":{"line":6,"column":8},"end":{"line":24,"column":10}},"3":{"start":{"line":7,"column":27},"end":{"line":7,"column":54}},"4":{"start":{"line":8,"column":43},"end":{"line":8,"column":51}},"5":{"start":{"line":9,"column":29},"end":{"line":9,"column":57}},"6":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"7":{"start":{"line":11,"column":16},"end":{"line":11,"column":86}},"8":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":86}},"10":{"start":{"line":16,"column":32},"end":{"line":16,"column":83}},"11":{"start":{"line":16,"column":56},"end":{"line":16,"column":82}},"12":{"start":{"line":17,"column":32},"end":{"line":17,"column":83}},"13":{"start":{"line":17,"column":56},"end":{"line":17,"column":82}},"14":{"start":{"line":18,"column":12},"end":{"line":22,"column":13}},"15":{"start":{"line":19,"column":16},"end":{"line":21,"column":73}},"16":{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},"17":{"start":{"line":27,"column":0},"end":{"line":27,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":25,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":31},"end":{"line":6,"column":32}},"loc":{"start":{"line":6,"column":57},"end":{"line":24,"column":9}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":46},"end":{"line":16,"column":47}},"loc":{"start":{"line":16,"column":56},"end":{"line":16,"column":82}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":46},"end":{"line":17,"column":47}},"loc":{"start":{"line":17,"column":56},"end":{"line":17,"column":82}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},{"start":{"line":10,"column":12},"end":{"line":12,"column":13}}],"line":10},"1":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13},"2":{"loc":{"start":{"line":18,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":22,"column":13}},{"start":{"line":18,"column":12},"end":{"line":22,"column":13}}],"line":18},"3":{"loc":{"start":{"line":18,"column":16},"end":{"line":18,"column":44}},"type":"binary-expr","locations":[{"start":{"line":18,"column":16},"end":{"line":18,"column":28}},{"start":{"line":18,"column":32},"end":{"line":18,"column":44}}],"line":18}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":5,"6":5,"7":2,"8":3,"9":0,"10":3,"11":5,"12":3,"13":4,"14":3,"15":2,"16":1,"17":1},"f":{"0":1,"1":5,"2":5,"3":4},"b":{"0":[2,3],"1":[0,3],"2":[2,1],"3":[3,2]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/login.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/middlewares/login.ts"],"names":[],"mappings":";;AAAA,2CAA8C;AAG9C,MAAqB,eAAe;IAApC;QACS,oBAAe,GAAG,KAAK,EAC5B,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;YACF,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;YAClC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAExC,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAE9C,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC,CAAC;aACvE;YACD,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2BAA2B,EAAE,CAAC,CAAC;aACvE;YAED,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;YAExE,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;YAExE,IAAI,CAAC,WAAW,IAAI,CAAC,WAAW,EAAE;gBAChC,OAAO,GAAG;qBACP,MAAM,CAAC,GAAG,CAAC;qBACX,IAAI,CAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,CAAC,CAAC;aACxD;YAED,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;IACJ,CAAC;CAAA;AA9BD,kCA8BC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { NextFunction, Request, Response } from \"express\";\n\nexport default class MiddlewareLogin {\n  public validationLogin = async (\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) => {\n    const prisma = new PrismaClient();\n    const { username, password } = req.body;\n\n    const getUsers = await prisma.user.findMany();\n\n    if (!username) {\n      return res.status(400).json({ message: 'All fields must be filled' });\n    }\n    if (!password) {\n      return res.status(400).json({ message: 'All fields must be filled' });\n    }\n\n    const getUsername = getUsers.some((name) => name.username === username);\n\n    const getPassword = getUsers.some((pass) => pass.password === password);\n\n    if (!getUsername || !getPassword) {\n      return res\n        .status(401)\n        .json({ message: \"username or password incorrect\" });\n    }\n\n    next();\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"91bf9a7dd68ffed32bad364d180e7dfe4840db5b","contentHash":"289dcbb01ef7240e173c0584b1fc06cf85564757f27bf8d4a079893dc596864c"},"/home/hudson/Documentos/Projects/DevChat/server/src/routes/message.router.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/message.router.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":64}},"5":{"start":{"line":8,"column":29},"end":{"line":8,"column":90}},"6":{"start":{"line":9,"column":26},"end":{"line":9,"column":81}},"7":{"start":{"line":10,"column":15},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":24},"end":{"line":11,"column":45}},"9":{"start":{"line":12,"column":23},"end":{"line":12,"column":54}},"10":{"start":{"line":13,"column":26},"end":{"line":13,"column":74}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":86}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":98}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{"0":4},"b":{"0":[1,1,1],"1":[3,1],"2":[4,4]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/routes/message.router.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/routes/message.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,iEAAmD;AACnD,2FAAkE;AAClE,kFAAyD;AAEzD,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;AAC9C,MAAM,cAAc,GAAG,IAAI,yBAAc,EAAE,CAAC;AAC5C,MAAM,iBAAiB,GAAG,IAAI,4BAAiB,CAAC,cAAc,CAAC,CAAC;AAEhE,MAAM,CAAC,IAAI,CACT,GAAG,EACH,eAAe,CAAC,eAAe,EAC/B,iBAAiB,CAAC,gBAAgB,CACnC,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,GAAG,EACH,eAAe,CAAC,eAAe,EAC/B,iBAAiB,CAAC,6BAA6B,CAChD,CAAC;AACF,kBAAe,MAAM,CAAC","sourcesContent":["import express from \"express\";\nimport MiddlewareToken from \"../middlewares/token\";\nimport MessageController from \"../controllers/message.controller\";\nimport MessageService from \"../services/message.service\";\n\nconst router = express.Router();\n\nconst middlewaretoken = new MiddlewareToken();\nconst messageService = new MessageService();\nconst messageController = new MessageController(messageService);\n\nrouter.post(\n  \"/\",\n  middlewaretoken.validationToken,\n  messageController.createNewMessage\n);\n\nrouter.get(\n  \"/\",\n  middlewaretoken.validationToken,\n  messageController.getMessagesFilteredByCategory\n);\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aaf0755329133869199b14dcab350030443f4bc6","contentHash":"7c004aa1959d4f344b9f2b79cf19882495ef2236122317d4140620bdd5a3f435"},"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/message.controller.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/message.controller.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":3,"column":57}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":47}},"3":{"start":{"line":7,"column":8},"end":{"line":19,"column":10}},"4":{"start":{"line":8,"column":12},"end":{"line":18,"column":13}},"5":{"start":{"line":9,"column":32},"end":{"line":9,"column":40}},"6":{"start":{"line":10,"column":33},"end":{"line":10,"column":51}},"7":{"start":{"line":11,"column":30},"end":{"line":11,"column":55}},"8":{"start":{"line":12,"column":33},"end":{"line":12,"column":82}},"9":{"start":{"line":13,"column":35},"end":{"line":13,"column":107}},"10":{"start":{"line":14,"column":16},"end":{"line":14,"column":49}},"11":{"start":{"line":17,"column":16},"end":{"line":17,"column":82}},"12":{"start":{"line":20,"column":8},"end":{"line":29,"column":10}},"13":{"start":{"line":21,"column":12},"end":{"line":28,"column":13}},"14":{"start":{"line":22,"column":33},"end":{"line":22,"column":51}},"15":{"start":{"line":23,"column":39},"end":{"line":23,"column":99}},"16":{"start":{"line":24,"column":16},"end":{"line":24,"column":53}},"17":{"start":{"line":27,"column":16},"end":{"line":27,"column":78}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":33},"end":{"line":30,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":32},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":52},"end":{"line":19,"column":9}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":45},"end":{"line":20,"column":46}},"loc":{"start":{"line":20,"column":65},"end":{"line":29,"column":9}},"line":20}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"f":{"0":1,"1":0,"2":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/controllers/message.controller.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/controllers/message.controller.ts"],"names":[],"mappings":";;AAIA,0DAAuD;AAEvD,MAAqB,iBAAiB;IACpC,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAE5C,qBAAgB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;YAC9D,IAAI;gBACF,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;gBACzB,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAkB,CAAC;gBAC9C,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;gBACxC,MAAM,QAAQ,GAAG,IAAA,6BAAa,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAE9C,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAC5D,OAAO,EACP,QAAQ,EACR,QAAQ,CACT,CAAC;gBACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAClC;YAAC,OAAO,KAAK,EAAE;gBACd,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;aACnE;QACH,CAAC,CAAC;QAEK,kCAA6B,GAAG,KAAK,EAC1C,GAAY,EACZ,GAAa,EACb,EAAE;YACF,IAAI;gBACF,MAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAkB,CAAC;gBAC9C,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,uBAAuB,CACvE,QAAQ,CACT,CAAC;gBACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aACtC;YAAC,OAAO,KAAK,EAAE;gBACd,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC,CAAC;aAC/D;QACH,CAAC,CAAC;IAjCoD,CAAC;CAkCxD;AAnCD,oCAmCC","sourcesContent":["import { Request, Response } from \"express\";\n\nimport MessageService from \"../services/message.service\";\n\nimport { tokenUsername } from \"../utils/tokenUsername\";\n\nexport default class MessageController {\n  constructor(private _messageService: MessageService) {}\n\n  public createNewMessage = async (req: Request, res: Response) => {\n    try {\n      const content = req.body;\n      const category = req.query.category as string;\n      const token = req.headers.authorization;\n      const username = tokenUsername(String(token));\n\n      const newMessage = await this._messageService.createNewMessage(\n        content,\n        category,\n        username\n      );\n      res.status(201).json(newMessage);\n    } catch (error) {\n      res.status(500).json({ message: \"error creating a new message\" });\n    }\n  };\n\n  public getMessagesFilteredByCategory = async (\n    req: Request,\n    res: Response\n  ) => {\n    try {\n      const category = req.query.category as string;\n      const filterMessages = await this._messageService.filterMessageByCategory(\n        category\n      );\n      res.status(200).json(filterMessages);\n    } catch (error) {\n      res.status(500).json({ message: \"error filtering messages\" });\n    }\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e518bb0ac6edca0e897da0c6430f736c549d3b09","contentHash":"269c38b52f0ffdc871f5b6c579ca9d290981a6bdc0a7e1b7f2e9f2d8878632c8"},"/home/hudson/Documentos/Projects/DevChat/server/src/services/message.service.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/services/message.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":27},"end":{"line":7,"column":73}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":65}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":50}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":56}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":64}},"9":{"start":{"line":14,"column":8},"end":{"line":27,"column":10}},"10":{"start":{"line":15,"column":34},"end":{"line":15,"column":84}},"11":{"start":{"line":16,"column":30},"end":{"line":16,"column":72}},"12":{"start":{"line":17,"column":27},"end":{"line":17,"column":40}},"13":{"start":{"line":18,"column":31},"end":{"line":18,"column":50}},"14":{"start":{"line":19,"column":31},"end":{"line":25,"column":14}},"15":{"start":{"line":26,"column":12},"end":{"line":26,"column":30}},"16":{"start":{"line":28,"column":8},"end":{"line":48,"column":10}},"17":{"start":{"line":29,"column":34},"end":{"line":29,"column":84}},"18":{"start":{"line":30,"column":31},"end":{"line":30,"column":50}},"19":{"start":{"line":31,"column":48},"end":{"line":46,"column":14}},"20":{"start":{"line":47,"column":12},"end":{"line":47,"column":47}},"21":{"start":{"line":51,"column":0},"end":{"line":51,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":18},"end":{"line":49,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":32},"end":{"line":14,"column":33}},"loc":{"start":{"line":14,"column":75},"end":{"line":27,"column":9}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":28,"column":39},"end":{"line":28,"column":40}},"loc":{"start":{"line":28,"column":59},"end":{"line":48,"column":9}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":1},"f":{"0":2,"1":1,"2":0,"3":0},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/services/message.service.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/services/message.service.ts"],"names":[],"mappings":";;;;;AAAA,2CAA8C;AAE9C,0EAAiD;AACjD,kEAAyC;AAEzC,MAAqB,cAAc;IAAnC;QACE,WAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;QAC5B,gBAAW,GAAG,IAAI,sBAAW,EAAE,CAAC;QAChC,oBAAe,GAAG,IAAI,0BAAe,EAAE,CAAC;QACjC,qBAAgB,GAAG,KAAK,EAC7B,WAAqB,EACrB,QAAgB,EAChB,QAAgB,EAChB,EAAE;YACF,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACzE,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAE7D,MAAM,MAAM,GAAG,SAAS,EAAE,EAAE,CAAE;YAC9B,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEvC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnD,IAAI,EAAE;oBACJ,OAAO,EAAE,WAAW,CAAC,OAAO;oBAC5B,YAAY,EAAE,UAAU;oBACxB,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;iBACvB;aACF,CAAC,CAAC;YACH,OAAO,UAAU,CAAC;QACpB,CAAC,CAAC;QAEK,4BAAuB,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;YAC1D,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAEzE,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEvC,MAAM,2BAA2B,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACtE,KAAK,EAAE;oBACL,YAAY,EAAE,UAAU;iBACzB;gBACD,OAAO,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;gBAC9B,MAAM,EAAE;oBACN,EAAE,EAAE,IAAI;oBACR,OAAO,EAAE,IAAI;oBACb,IAAI,EAAE;wBACJ,MAAM,EAAE;4BACN,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,IAAI;yBACd;qBACF;iBACF;aACF,CAAC,CAAC;YACH,OAAO,2BAA2B,CAAC;QACrC,CAAC,CAAC;IACJ,CAAC;CAAA;AAhDD,iCAgDC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { IMessage } from \"../interfaces/IMessage\";\nimport CategoryService from \"./category.service\";\nimport UserService from \"./user.service\";\n\nexport default class messageService {\n  prisma = new PrismaClient();\n  userService = new UserService();\n  categoryService = new CategoryService();\n  public createNewMessage = async (\n    messageInfo: IMessage,\n    category: string,\n    username: string\n  ) => {\n    const getCategoryId = await this.categoryService.getCategoryId(category);\n    const getUserId = await this.userService.getUserId(username);\n\n    const userId = getUserId?.id ;\n    const categoryId = getCategoryId[0].id;\n\n    const newMessage = await this.prisma.messages.create({\n      data: {\n        content: messageInfo.content,\n        categoriesId: categoryId,\n        userId: String(userId),\n      },\n    });\n    return newMessage;\n  };\n\n  public filterMessageByCategory = async (category: string) => {\n    const getCategoryId = await this.categoryService.getCategoryId(category);\n\n    const categoryId = getCategoryId[0].id;\n\n    const listMessageFilterByCategory = await this.prisma.messages.findMany({\n      where: {\n        categoriesId: categoryId,\n      },\n      orderBy: { createdAt: \"desc\" },\n      select: {\n        id: true,\n        content: true,\n        User: {\n          select: {\n            username: true,\n            img_url: true,\n          },\n        },\n      },\n    });\n    return listMessageFilterByCategory;\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0f6d003cf50612d64662505e99157005c97fd174","contentHash":"61a3b1fc6cdd9c402f0337ebd4727331abed39653ea7de8968a3a94a12789cae"},"/home/hudson/Documentos/Projects/DevChat/server/src/tests/user.spec.ts":{"path":"/home/hudson/Documentos/Projects/DevChat/server/src/tests/user.spec.ts","statementMap":{},"fnMap":{},"branchMap":{},"s":{},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/hudson/Documentos/Projects/DevChat/server/src/tests/user.spec.ts","sources":["/home/hudson/Documentos/Projects/DevChat/server/src/tests/user.spec.ts"],"names":[],"mappings":"","sourcesContent":[""]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fedc683cbd605a64d409df19fa17fc9d0ad78f09","contentHash":"bf0e895a5c55c69e98cf1fce7d81e1e8e4600c6432656e25221d4b436ac14715"}}